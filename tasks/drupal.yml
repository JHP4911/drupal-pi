---
- name: Check if Drupal has already been installed.
  stat: path=/var/local/drupal_install_complete
  register: drupal_install_complete

- name: Ensure /var/www directory exists.
  file:
    path: /var/www
    state: directory
    mode: 0755

- name: Ensure drupal_docroot exists.
  file:
    path: "{{ drupal_docroot }}"
    state: directory
    mode: 0755
    owner: www-data
    group: www-data

- name: Ensure staging config directory has correct permissions.
  file:
    path: "{{ drupal_docroot }}/sites/default/config/staging"
    state: directory
    mode: 0755
    owner: www-data
    group: www-data
  when: drupal_install_complete.stat.exists

- name: Check out our Drupal 8 project to the docroot.
  git:
    repo: "{{ drupal_repo }}"
    version: "{{ drupal_version }}"
    update: yes
    force: yes
    dest: "{{ drupal_docroot }}"
  register: project_updated
  notify: restart nginx
  sudo_user: www-data

- name: Copy settings.php file into place.
  template:
    src: templates/settings.php.j2
    dest: "{{ drupal_docroot }}/sites/default/settings.php"
    owner: www-data
    group: www-data
  notify: restart nginx

- name: Set permissions on settings.php (pre-install).
  file:
    path: "{{ drupal_docroot }}/sites/default/settings.php"
    mode: 0664
  when: not drupal_install_complete.stat.exists

- name: Ensure settings.php has proper permissions.
  file:
    path: "{{ drupal_docroot }}/sites/default/settings.php"
    mode: 0644
  when: drupal_install_complete.stat.exists

- name: Install Drupal.
  command: >
    drush si {{ drupal_install_profile }} -y
    --site-name="{{ site_name }}"
    --account-name={{ drupal_admin_name }}
    --account-pass={{ drupal_admin_password }}
    chdir={{ drupal_docroot }}
  when: not drupal_install_complete.stat.exists
  sudo_user: www-data

- name: Wait for Drupal to get bootstrapped.
  pause: seconds=5
  when: not drupal_install_complete.stat.exists

- name: Override the generated site UUID with our own.
  command: >
    drush config-set -y system.site uuid {{ drupal_site_uuid }}
    chdir={{ drupal_docroot }}
  when: not drupal_install_complete.stat.exists
  sudo_user: www-data

- name: Ensure settings.php has proper permissions.
  file:
    path: "{{ drupal_docroot }}/sites/default/settings.php"
    mode: 0644

- name: Indicate Drupal has been installed.
  file: path=/var/local/drupal_install_complete state=touch mode=0644

- name: Run database updates.
  command: >
    drush updatedb -y
    chdir={{ drupal_docroot }}
  when: drupal_install_complete.stat.exists and project_updated.changed

- name: Import staging configuration.
  command: >
    drush config-import -y staging
    chdir={{ drupal_docroot }}
  when: drupal_install_complete.stat.exists and project_updated.changed

- name: Rebuild caches.
  command: >
    drush cache-rebuild --quiet
    chdir={{ drupal_docroot }}
  when: drupal_install_complete.stat.exists and project_updated.changed

- name: Add Drupal cron job.
  cron:
    name: "Dramble Drupal cron"
    minute: "*/15"
    user: "{{ ansible_ssh_user }}"
    job: "/usr/local/bin/drush --quiet --root=/var/www/drupal cron -y"

---
services: docker

env:
  global:
    - HOSTNAME: www.drupalpi.test
      MACHINE_NAME: drupalpi
      PLAYBOOK_DIR: /tmp/drupal-pi

script:
  # Run container in detached state.
  - 'docker run --detach --name drupalpi --add-host "${HOSTNAME}$(echo -e "\t")${MACHINE_NAME}":127.0.0.1 --volume="${PWD}":${PLAYBOOK_DIR}/:rw --privileged --volume=/var/lib/docker --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro geerlingguy/docker-debian10-ansible:latest /lib/systemd/systemd'

  # Install Python 3.
  - 'docker exec drupalpi bash -c "apt update && apt install -y python3"'

  # Copy inventory file into place.
  - 'docker exec drupalpi cp ${PLAYBOOK_DIR}/example.inventory ${PLAYBOOK_DIR}/inventory'

  # Install requirements.
  - 'docker exec --tty drupalpi ansible-galaxy install -r ${PLAYBOOK_DIR}/requirements.yml'

  # Ansible syntax check.
  - 'docker exec --tty drupalpi ansible-playbook -i ${PLAYBOOK_DIR}/inventory ${PLAYBOOK_DIR}/main.yml --syntax-check'

  # Run the playbook with ansible-playbook.
  - >
    docker exec drupalpi
    env ANSIBLE_FORCE_COLOR=true
    ansible-playbook -i ${PLAYBOOK_DIR}/inventory
    --connection=local
    --extra-vars "{
      'docker_version':'5:19.03.1~3-0~debian-buster',
      'firewall_enable_ipv6':false
    }"
    ${PLAYBOOK_DIR}/main.yml

  # Run integration tests.
  # - >
  #   docker exec drupalpi curl -s --header Host:${HOSTNAME} localhost
  #   | tee /tmp/drupalpi-curl-output
  #   | grep -q 'Drupal Pi'
  #   && (echo 'Drupal install pass' && exit 0)
  #   || (echo 'Drupal install fail' && cat /tmp/drupalpi-curl-output && exit 1)
